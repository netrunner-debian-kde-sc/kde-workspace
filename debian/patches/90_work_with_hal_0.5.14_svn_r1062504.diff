--- a/libs/solid/control/powermanager.cpp
+++ b/libs/solid/control/powermanager.cpp
@@ -196,7 +196,7 @@
         else
         {
             return_SOLID_CALL(Ifaces::PowerManager *, globalPowerManager->managerBackend(),
-                      false, brightness(controls.keys().at(0)));
+                      false, brightness(controls.keys(Solid::Control::PowerManager::Screen).at(0)));
         }
     }
     else
--- a/solid/hal/halpower.cpp
+++ b/solid/hal/halpower.cpp
@@ -375,7 +375,8 @@
 float HalPower::brightness(const QString &device)
 {
     float brightness;
-    if(m_halManager.call("FindDeviceByCapability", "laptop_panel").arguments().at(0).toStringList().contains(device))
+    QDBusReply<QStringList> reply = m_halManager.call("FindDeviceByCapability", "laptop_panel");
+    if(reply.isValid() && reply.value().contains(device))
     {
         QDBusInterface deviceInterface("org.freedesktop.Hal", device, "org.freedesktop.Hal.Device.LaptopPanel", QDBusConnection::systemBus());
         brightness = deviceInterface.call("GetBrightness").arguments().at(0).toDouble();
@@ -390,7 +391,8 @@
             return (float)(100*(brightness/(levels-1)));
         }
     }
-    if(m_halManager.call("FindDeviceByCapability", "keyboard_backlight").arguments().at(0).toStringList().contains(device))
+    reply = m_halManager.call("FindDeviceByCapability", "keyboard_backlight");
+    if(reply.isValid() && reply.value().contains(device)) 
     {
         QDBusInterface deviceInterface("org.freedesktop.Hal", device, "org.freedesktop.Hal.Device.KeyboardBacklight", QDBusConnection::systemBus()); //TODO - I do not have a backlight enabled keyboard, so I'm guessing a bit here. Could someone please check this.
         brightness = deviceInterface.call("GetBrightness").arguments().at(0).toDouble();
@@ -410,7 +412,8 @@
 
 bool HalPower::setBrightness(float brightness, const QString &device)
 {
-    if(m_halManager.call("FindDeviceByCapability", "laptop_panel").arguments().at(0).toStringList().contains(device))
+    QDBusReply<QStringList> reply = m_halManager.call("FindDeviceByCapability", "laptop_panel");
+    if(reply.isValid() && reply.value().contains(device))
     {
         QDBusInterface propertyInterface("org.freedesktop.Hal", device, "org.freedesktop.Hal.Device", QDBusConnection::systemBus());
         int levels = propertyInterface.call("GetProperty", "laptop_panel.num_levels").arguments().at(0).toInt();
@@ -422,7 +425,8 @@
             return true;
         }
     }
-    if(m_halManager.call("FindDeviceByCapability", "keyboard_backlight").arguments().at(0).toStringList().contains(device))
+    reply = m_halManager.call("FindDeviceByCapability", "keyboard_backlight");
+    if(reply.isValid() && reply.value().contains(device)) 
     {
         QDBusInterface propertyInterface("org.freedesktop.Hal", device, "org.freedesktop.Hal.Device", QDBusConnection::systemBus());
         int levels = propertyInterface.call("GetProperty", "keyboard_backlight.num_levels").arguments().at(0).toInt();
