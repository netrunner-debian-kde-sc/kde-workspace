--- a/kdm/kfrontend/genkdmconf.c
+++ b/kdm/kfrontend/genkdmconf.c
@@ -622,7 +622,7 @@ static const char def_xaccess[] =
 "# right hand sides can match.\n"
 "#\n"
 "\n"
-"*					#any host can get a login window\n"
+"#*					#any host can get a login window\n"
 "\n"
 "#\n"
 "# To hardwire a specific terminal to a specific host, you can\n"
@@ -640,7 +640,7 @@ static const char def_xaccess[] =
 "# so this may not work in all environments.\n"
 "#\n"
 "\n"
-"*		CHOOSER BROADCAST	#any indirect host can get a chooser\n"
+"#*		CHOOSER BROADCAST	#any indirect host can get a chooser\n"
 "\n"
 "#\n"
 "# If you would prefer to configure the set of hosts each terminal sees,\n"
@@ -676,16 +676,18 @@ static const char def_startup[] =
 "#! /bin/sh\n"
 "# Xstartup - run as root before session starts\n"
 "\n"
-"# By convention, both xconsole and xterm -C check that the\n"
-"# console is owned by the invoking user and is readable before attaching\n"
-"# the console output.  This way a random user can invoke xterm -C without\n"
-"# causing serious grief; still, it can cause havoc, so xconsole is started\n"
-"# by Xsetup usually.\n"
-"# This is not required if you use PAM with the pam_console module.\n"
-"#\n"
-"#chown $USER /dev/console\n"
+"PATH=\"$PATH:/usr/bin/X11\"\n"
 "\n"
-"# XDM configurations typically have sessreg here. KDM has it built-in.\n"
+"if [ -e /etc/nologin ]; then\n"
+"  # always display the nologin message, if possible\n"
+"  if [ -s /etc/nologin ] && which xmessage > /dev/null 2>&1; then\n"
+"    xmessage -file /etc/nologin -geometry 640x480\n"
+"  fi\n"
+"  if [ \"$(id -u)\" != \"0\" ] && \\\n"
+"     ! grep -qs '^ignore-nologin' /etc/kde4/kdm/kdm.options; then\n"
+"    exit 1\n"
+"  fi\n"
+"fi\n"
 "\n"
 "# NOTE: The session is aborted if the last command returns non-zero.\n";
 
@@ -731,6 +733,7 @@ static const char def_session1[] =
 "    [ -f $zhome/.zprofile ] && . $zhome/.zprofile\n"
 "    [ -f $zdir/zlogin ] && . $zdir/zlogin\n"
 "    [ -f $zhome/.zlogin ] && . $zhome/.zlogin\n"
+"    setopt shwordsplit noextendedglob\n"
 "    ;;\n"
 "  */csh|*/tcsh)\n"
 "    # [t]cshrc is always sourced automatically.\n"
@@ -748,36 +751,8 @@ static const char def_session2[] =
 "    ;;\n"
 "esac\n"
 "\n"
-"[ -f /etc/xprofile ] && . /etc/xprofile\n"
-"[ -f $HOME/.xprofile ] && . $HOME/.xprofile\n"
-"\n"
-"if [ -d /etc/X11/Xresources ]; then\n"
-"  for i in /etc/X11/Xresources/*; do\n"
-"    [ -f $i ] && xrdb -merge $i\n"
-"  done\n"
-"elif [ -f /etc/X11/Xresources ]; then\n"
-"  xrdb -merge /etc/X11/Xresources\n"
-"fi\n"
-"[ -f $HOME/.Xresources ] && xrdb -merge $HOME/.Xresources\n"
-"\n"
-"case $session in\n"
-"  \"\")\n"
-"    exec xmessage -center -buttons OK:0 -default OK \"Sorry, $DESKTOP_SESSION is no valid session.\"\n"
-"    ;;\n"
-"  failsafe)\n"
-"    exec xterm -geometry 80x24-0-0\n"
-"    ;;\n"
-"  custom)\n"
-"    exec $HOME/.xsession\n"
-"    ;;\n"
-"  default)\n"
-"    exec " KDE_BINDIR "/startkde\n"
-"    ;;\n"
-"  *)\n"
-"    eval exec \"$session\"\n"
-"    ;;\n"
-"esac\n"
-"exec xmessage -center -buttons OK:0 -default OK \"Sorry, cannot execute $session. Check $DESKTOP_SESSION.desktop.\"\n";
+"# invoke global X session script\n"
+". /etc/X11/Xsession\n";
 
 static const char def_background[] =
 "[Desktop0]\n"
@@ -1128,29 +1103,6 @@ getInitTab(void)
 
     if (maxTTY)
         return;
-    if (readFile(&it, "/etc/inittab")) {
-        usedFile("/etc/inittab");
-        for (p = it.buf; p < it.eof; p = eol + 1) {
-            for (eol = p; eol < it.eof && *eol != '\n'; eol++);
-            if (*p != '#') {
-                if ((ep = memMem(p, eol - p, " tty", 4)) &&
-                    ep < eol && isdigit(*ep))
-                {
-                    if (ep + 1 == eol || isspace(*(ep + 1)))
-                        tty = *ep - '0';
-                    else if (isdigit(*(ep + 1)) &&
-                             (ep + 2 == eol || isspace(*(ep + 2))))
-                        tty = (*ep - '0') * 10 + (*(ep + 1) - '0');
-                    else
-                        continue;
-                    TTYmask |= 1 << (tty - 1);
-                    if (tty > maxTTY)
-                        maxTTY = tty;
-                }
-            }
-        }
-        freeBuf(&it);
-    }
     if (!maxTTY) {
         maxTTY = 6;
         TTYmask = 0x3f;
