--- kdebase-workspace-4.3.0.orig/ksysguard/ksysguardd/CMakeLists.txt
+++ kdebase-workspace-4.3.0/ksysguard/ksysguardd/CMakeLists.txt
@@ -18,6 +18,10 @@
 
 configure_file(config-ksysguardd.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-ksysguardd.h)
 
+if( ${CMAKE_SYSTEM_NAME} MATCHES "kFreeBSD" )
+    add_subdirectory( "FreeBSD" )
+    include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/FreeBSD )
+else( ${CMAKE_SYSTEM_NAME} MATCHES "kFreeBSD" )
 if( ${CMAKE_SYSTEM_NAME} MATCHES "DragonFly" )
     add_subdirectory( "FreeBSD" )
     include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/FreeBSD )
@@ -30,6 +34,7 @@
         include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_NAME} )
     endif( ${CMAKE_SYSTEM_NAME} MATCHES "SunOS" )
 endif( ${CMAKE_SYSTEM_NAME} MATCHES "DragonFly" )
+endif( ${CMAKE_SYSTEM_NAME} MATCHES "kFreeBSD" )
 
 ########### next target ###############
 
only in patch2:
unchanged:
--- kdebase-workspace-4.3.0.orig/ksysguard/ksysguardd/FreeBSD/ProcessList.c
+++ kdebase-workspace-4.3.0/ksysguard/ksysguardd/FreeBSD/ProcessList.c
@@ -33,7 +33,7 @@
 #include <sys/resourcevar.h>
 #endif
 
-#if __FreeBSD_version > 500015
+#if (__FreeBSD_version > 500015) || (__FreeBSD_kernel_version > 500015)
 #include <sys/priority.h>
 #endif
 #include <sys/sysctl.h>
@@ -203,7 +203,7 @@
 	if (sysctl(mib, 4, &p, &len, NULL, 0) == -1 || !len)
 		return -1;
 
-#if __FreeBSD_version >= 500015
+#if (__FreeBSD_version > 500015) || (__FreeBSD_kernel_version > 500015)
         ps->pid       = p.ki_pid;
         ps->ppid      = p.ki_ppid;
         ps->uid       = p.ki_uid;    
@@ -231,7 +231,7 @@
 #endif
 
         /* this isn't usertime -- it's total time (??) */
-#if __FreeBSD_version >= 500015
+#if (__FreeBSD_version > 500015) || (__FreeBSD_kernel_version > 500015)
         ps->userTime = p.ki_runtime / 10000;
 #elif defined(__DragonFly__)
 #if __DragonFly_version >= 190000
@@ -260,7 +260,7 @@
 	if (fscale == 0)
 		ps->userLoad = 0;
 	else
-#if __FreeBSD_version >= 500015
+#if (__FreeBSD_version > 500015) || (__FreeBSD_kernel_version > 500015)
 	ps->userLoad = 100.0 * (double) p.ki_pctcpu / fscale;
 	ps->vmSize   = p.ki_size;
 	ps->vmRss    = p.ki_rssize * getpagesize();
@@ -380,7 +380,7 @@
         sysctl(mib, 3, p, &len, NULL, 0);
 
 	for (num = 0; num < len / sizeof(struct kinfo_proc); num++)
-#if __FreeBSD_version >= 500015
+#if (__FreeBSD_version > 500015) || (__FreeBSD_kernel_version > 500015)
 		updateProcess(p[num].ki_pid);
 #elif __DragonFly_version >= 190000
 	    /* Skip kernel threads with pid -1. Swapper with pid 0 also
only in patch2:
unchanged:
--- kdebase-workspace-4.3.0.orig/libs/ksysguard/processcore/processes_local_p.cpp
+++ kdebase-workspace-4.3.0/libs/ksysguard/processcore/processes_local_p.cpp
@@ -21,7 +21,7 @@
 
 #if defined __linux__
 #include "processes_linux_p.cpp"
-#elif defined __FreeBSD__ || defined __DragonFly__
+#elif defined __FreeBSD__ || defined __FreeBSD_kernel__ || defined __DragonFly__
 #include "processes_freebsd_p.cpp"
 #elif defined __OpenBSD__
 #include "processes_openbsd_p.cpp"
only in patch2:
unchanged:
--- kdebase-workspace-4.3.0.orig/libs/ksysguard/processcore/processes_freebsd_p.cpp
+++ kdebase-workspace-4.3.0/libs/ksysguard/processcore/processes_freebsd_p.cpp
@@ -78,7 +78,7 @@
     process->setTracerpid(0);
 
 
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
     process->setEuid(p->ki_uid);    
     process->setUid(p->ki_ruid);
     process->setEgid(p->ki_svgid);
@@ -98,7 +98,7 @@
 {
     int status;
     struct rusage pru;
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         ps->setUserTime(p->ki_rusage.ru_utime.tv_sec * 100 + p->ki_rusage.ru_utime.tv_usec / 10000);
         ps->setSysTime(p->ki_rusage.ru_stime.tv_sec * 100 + p->ki_rusage.ru_stime.tv_usec / 10000);
         ps->setNiceLevel(p->ki_nice);
@@ -185,7 +185,7 @@
     struct kinfo_proc p;
     if(d->readProc(pid, &p))
     {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         ppid = p.ki_ppid;
 #elif defined(__DragonFly__) && __DragonFly_version >= 190000
         ppid = p.kp_ppid;
@@ -230,7 +230,7 @@
 
     for (num = 0; num < len / sizeof(struct kinfo_proc); num++)
     {
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
         long pid = p[num].ki_pid;
         long long ppid = p[num].ki_ppid;
 #elif defined(__DragonFly__) && __DragonFly_version >= 190000
